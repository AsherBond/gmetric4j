/*
 * Automatically generated by jrpcgen 1.0.5 on 10/23/08 8:11 PM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
package ganglia.xdr.v31x;
import org.acplt.oncrpc.*;
import java.io.IOException;

public class Ganglia_metadata_msg implements XdrAble {
    public int id;
    public Ganglia_metadatadef gfull;
    public Ganglia_metadatareq grequest;
    public Ganglia_uuid uuid;

    public Ganglia_metadata_msg() {
    }

    public Ganglia_metadata_msg(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        xdrDecode(xdr);
    }
    
    protected boolean hasUUID() {
    	return ((id & 0x40) == 0x40);
    }

    public void xdrEncode(XdrEncodingStream xdr)
           throws OncRpcException, IOException {
        xdr.xdrEncodeInt(id);
        
        int _id = id & 0xbf;
        
        switch ( _id ) {
        case Ganglia_msg_formats.gmetadata_full:
            gfull.xdrEncode(xdr);
            break;
        case Ganglia_msg_formats.gmetadata_request:
            grequest.xdrEncode(xdr);
            break;
        default:
            break;
        }
        
        if(hasUUID()) {
        	uuid.xdrEncode(xdr);
        }
    }

    public void xdrDecode(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        id = xdr.xdrDecodeInt();
        
        int _id = id & 0xbf;
        
        switch ( _id ) {
        case Ganglia_msg_formats.gmetadata_full:
            gfull = new Ganglia_metadatadef(xdr);
            break;
        case Ganglia_msg_formats.gmetadata_request:
            grequest = new Ganglia_metadatareq(xdr);
            break;
        default:
            break;
        }
        
        if(hasUUID()) {
        	uuid = new Ganglia_uuid(xdr);
        }
    }

}
// End of Ganglia_metadata_msg.java
